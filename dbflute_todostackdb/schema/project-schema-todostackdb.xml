<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE database SYSTEM "http://dbflute.org/meta/database.dtd">
<!-- Auto-generated by JDBC task! -->
<database name="">
    <table
        comment="会員 : 会員のプロフィールやアカウントなどの基本情報を保持する。&#xa;基本的に物理削除はなく、退会したらステータスが退会会員になる。&#xa;ライフサイクルやカテゴリの違う会員情報は、one-to-oneなどの関連テーブルにて。"
        name="MEMBER" schema="todostackdb.$$NoNameSchema$$" type="TABLE">
        <column autoIncrement="true" comment="会員ID : 会員ID"
            dbType="BIGINT UNSIGNED" javaType="Long" name="MEMBER_ID"
            pkName="PRIMARY" pkPosition="1" primaryKey="true"
            required="true" size="20" type="BIGINT"/>
        <column comment="会員アカウント : 会員アカウント" dbType="VARCHAR"
            javaType="String" name="MEMBER_ACCOUNT" required="true"
            size="100" type="VARCHAR"/>
        <column comment="Eメール : Eメールアドレス" dbType="VARCHAR"
            javaType="String" name="E_MAIL" required="true" size="216" type="VARCHAR"/>
        <column comment="登録日時 : レコードが登録された日時" dbType="DATETIME"
            javaType="java.time.LocalDateTime" name="REGISTER_DATETIME"
            required="true" size="19" type="TIMESTAMP"/>
        <column comment="登録ユーザー : レコードを登録したユーザー" dbType="VARCHAR"
            javaType="String" name="REGISTER_USER" required="true"
            size="200" type="VARCHAR"/>
        <column comment="更新日時 : レコードが(最後に)更新された日時" dbType="DATETIME"
            javaType="java.time.LocalDateTime" name="UPDATE_DATETIME"
            required="true" size="19" type="TIMESTAMP"/>
        <column comment="更新ユーザー : レコードを(最後に)更新したユーザー" dbType="VARCHAR"
            javaType="String" name="UPDATE_USER" required="true"
            size="200" type="VARCHAR"/>
        <column comment="バージョン番号 : 排他制御用、更新されるごとにインクリメントされる"
            dbType="BIGINT" javaType="Long" name="VERSION_NO"
            required="true" size="19" type="BIGINT"/>
        <unique name="E_MAIL">
            <unique-column name="E_MAIL" position="1"/>
        </unique>
    </table>
    <table
        comment="会員セキュリティ : 会員とは one-to-one で、会員一人につき必ず一つのセキュリティ情報がある"
        name="MEMBER_SECURITY" schema="todostackdb.$$NoNameSchema$$" type="TABLE">
        <column comment="会員ID : そのまま one-to-one を構成するためのFKとなる。"
            dbType="BIGINT UNSIGNED" javaType="Long" name="MEMBER_ID"
            pkName="PRIMARY" pkPosition="1" primaryKey="true"
            required="true" size="20" type="BIGINT"/>
        <column
            comment="ログインパスワード : ログイン時に利用するパスワード。&#xa;本当は良くないが、Exampleなのでひとまず暗号化していない。"
            dbType="VARCHAR" javaType="String" name="LOGIN_PASSWORD"
            required="true" size="100" type="VARCHAR"/>
        <column comment="登録日時 : レコードが登録された日時" dbType="DATETIME"
            javaType="java.time.LocalDateTime" name="REGISTER_DATETIME"
            required="true" size="19" type="TIMESTAMP"/>
        <column comment="登録ユーザー : レコードを登録したユーザー" dbType="VARCHAR"
            javaType="String" name="REGISTER_USER" required="true"
            size="200" type="VARCHAR"/>
        <column comment="更新日時 : レコードが(最後に)更新された日時" dbType="DATETIME"
            javaType="java.time.LocalDateTime" name="UPDATE_DATETIME"
            required="true" size="19" type="TIMESTAMP"/>
        <column comment="更新ユーザー : レコードを(最後に)更新したユーザー" dbType="VARCHAR"
            javaType="String" name="UPDATE_USER" required="true"
            size="200" type="VARCHAR"/>
        <column comment="バージョン番号 : 排他制御用、更新されるごとにインクリメントされる"
            dbType="BIGINT" javaType="Long" name="VERSION_NO"
            required="true" size="19" type="BIGINT"/>
        <foreign-key foreignSchema="todostackdb.$$NoNameSchema$$"
            foreignTable="MEMBER" name="FK_MEMBER_SECURITY_MEMBER">
            <reference foreign="MEMBER_ID" local="MEMBER_ID"/>
        </foreign-key>
    </table>
    <table comment="タスク" name="TASK"
        schema="todostackdb.$$NoNameSchema$$" type="TABLE">
        <column autoIncrement="true" comment="タスクID : タスクID"
            dbType="BIGINT UNSIGNED" javaType="Long" name="TASK_ID"
            pkName="PRIMARY" pkPosition="1" primaryKey="true"
            required="true" size="20" type="BIGINT"/>
        <column comment="会員ID : 会員ID" dbType="BIGINT UNSIGNED"
            javaType="Long" name="MEMBER_ID" required="true" size="20" type="BIGINT"/>
        <column comment="タスク詳細 : タスク詳細" dbType="TEXT" javaType="String"
            name="TASK_DETAIL" required="true" size="65535" type="LONGVARCHAR"/>
        <column comment="表示順 : 表示順。タスクの数だけあるので、bigint。" dbType="BIGINT"
            javaType="Long" name="DISPLAY_NUM" required="true" size="19" type="BIGINT"/>
        <column comment="完了フラグ : 完了フラグ" dbType="CHAR" javaType="String"
            name="DONE_FLG" required="true" size="1" type="CHAR"/>
        <column comment="登録日時 : レコードが登録された日時" dbType="DATETIME"
            javaType="java.time.LocalDateTime" name="REGISTER_DATETIME"
            required="true" size="19" type="TIMESTAMP"/>
        <column comment="登録ユーザー : レコードを登録したユーザー" dbType="VARCHAR"
            javaType="String" name="REGISTER_USER" required="true"
            size="200" type="VARCHAR"/>
        <column comment="更新日時 : レコードが(最後に)更新された日時" dbType="DATETIME"
            javaType="java.time.LocalDateTime" name="UPDATE_DATETIME"
            required="true" size="19" type="TIMESTAMP"/>
        <column comment="更新ユーザー : レコードを(最後に)更新したユーザー" dbType="VARCHAR"
            javaType="String" name="UPDATE_USER" required="true"
            size="200" type="VARCHAR"/>
        <column comment="バージョン番号 : 排他制御用、更新されるごとにインクリメントされる"
            dbType="BIGINT" javaType="Long" name="VERSION_NO"
            required="true" size="19" type="BIGINT"/>
        <foreign-key foreignSchema="todostackdb.$$NoNameSchema$$"
            foreignTable="MEMBER" name="task_ibfk_1">
            <reference foreign="MEMBER_ID" local="MEMBER_ID"/>
        </foreign-key>
        <unique name="UQ_TASK_ID_DISPLAY_NUM">
            <unique-column name="TASK_ID" position="1"/>
            <unique-column name="DISPLAY_NUM" position="2"/>
        </unique>
        <index name="IX_DISPLAY_NUM">
            <index-column name="DISPLAY_NUM" position="1"/>
        </index>
        <index name="MEMBER_ID">
            <index-column name="MEMBER_ID" position="1"/>
        </index>
    </table>
    <table comment="タスク作業" name="TASK_WORK"
        schema="todostackdb.$$NoNameSchema$$" type="TABLE">
        <column autoIncrement="true"
            comment="タスク作業ID : タスク作業ID。作業を開始するごとに生まれるのでbigint。"
            dbType="BIGINT" javaType="Long" name="TASK_WORK_ID"
            pkName="PRIMARY" pkPosition="1" primaryKey="true"
            required="true" size="19" type="BIGINT"/>
        <column comment="タスクID : タスクID" dbType="BIGINT UNSIGNED"
            javaType="Long" name="TASK_ID" required="true" size="20" type="BIGINT"/>
        <column comment="開始時間 : 開始時間" dbType="DATETIME"
            javaType="java.time.LocalDateTime" name="START_TM"
            required="true" size="19" type="TIMESTAMP"/>
        <column comment="終了時間 : 終了時間" dbType="DATETIME"
            javaType="java.time.LocalDateTime" name="END_TM"
            required="true" size="19" type="TIMESTAMP"/>
        <column comment="登録日時 : レコードが登録された日時" dbType="DATETIME"
            javaType="java.time.LocalDateTime" name="REGISTER_DATETIME"
            required="true" size="19" type="TIMESTAMP"/>
        <column comment="登録ユーザー : レコードを登録したユーザー" dbType="VARCHAR"
            javaType="String" name="REGISTER_USER" required="true"
            size="200" type="VARCHAR"/>
        <column comment="更新日時 : レコードが(最後に)更新された日時" dbType="DATETIME"
            javaType="java.time.LocalDateTime" name="UPDATE_DATETIME"
            required="true" size="19" type="TIMESTAMP"/>
        <column comment="更新ユーザー : レコードを(最後に)更新したユーザー" dbType="VARCHAR"
            javaType="String" name="UPDATE_USER" required="true"
            size="200" type="VARCHAR"/>
        <foreign-key foreignSchema="todostackdb.$$NoNameSchema$$"
            foreignTable="TASK" name="task_work_ibfk_1">
            <reference foreign="TASK_ID" local="TASK_ID"/>
        </foreign-key>
        <index name="TASK_ID">
            <index-column name="TASK_ID" position="1"/>
        </index>
    </table>
    <procedureGroup/>
</database>
